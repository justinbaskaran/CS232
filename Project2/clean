#!/bin/sh
# Justin Baskaran
# CS 232- Project 2
# March 06, 2019
NumFiles=0

clean_files () {
#shopt -s dotglob
#DIR=$1/*

#### GET FILES IN CURRENT DIRECTORY ############
DIR=$(ls -a $1)

########### CREATE STORE VARIABLES FOR COMMAND LINE ARGUMENTS
Inter=""
Quiet=""
Stats=""

#################### PARSE GIVEN ARGUMENTS TO FUNCTION ##########
for var in "$@"
do
    if test $var = "i"; then
        unset Inter
        Inter="i"  
    fi
    if test $var = "q" ; then
        unset Quiet
        Quiet="q" 
    fi

    if test $var = "s" ; then
        unset Stats
        Stats="s"

    fi
done
#echo "Directory Values: "$DIR
for file in $DIR; do
#########################IF FILE IS FOLDER #########################
    if [ -d $1/$file ] && [ $file != '.' ] && [ $file != '..' ];
    then
        #echo "Directory "$1/$file

#######################RECURSIVE CALL #######################################       
        clean_files $1/$file $Inter $Quiet $Stats $NumFiles
    elif [ $file != '.' ] && [ $file != '..' ] 
    then
##############################IF FILE IS FILE #######################
        #echo "File Found" $file

############################## FILE PROCESSING #######################
        case "$file" in *"~")  
            toDelete="y"
            if [ "$Inter" = "i" ]; then
                echo "Do you want to delete the file (enter y/n)?:  $1/$file"
                read toDelete
            fi
            if test $toDelete = "y"; then
                if [ "$Quiet" != "q" ]; then
                    echo "Deleted File: " $1/$file
                fi
                rm $1/$file
                NumFiles=$((NumFiles+1))  
            fi
        esac

        case "$file" in *"#") 
            toDelete="y"
            if [ "$Inter" = "i" ]; then
                echo "Do you want to delete the file (enter y/n)?:  $1/$file"
                read toDelete
            fi
            if test $toDelete = "y"; then
                if [ "$Quiet" != "q" ]; then
                    echo "Deleted File: " $1/$file
                fi
                rm $1/$file
                NumFiles=$((NumFiles+1))  
            fi
        esac

        case "$file" in *".o")
            toDelete="y"
            if [ "$Inter" = "i" ]; then
                echo "Do you want to delete the file (enter y/n)?:  $1/$file"
                read toDelete
            fi
            if test $toDelete = "y"; then
                if [ "$Quiet" != "q" ]; then
                    echo "Deleted File: " $1/$file
                fi
                rm $1/$file
                NumFiles=$((NumFiles+1))
            fi  
            
        esac

        case "$file" in "core")
            toDelete="y"
            if [ "$Inter" = "i" ]; then
                echo "Do you want to delete the file (enter y/n)?:  $1/$file"
                read toDelete
            fi
            if test $toDelete = "y"; then
                if [ "$Quiet" != "q" ]; then
                    echo "Deleted File: " $1/$file
                fi
                rm $1/$file
                NumFiles=$((NumFiles+1))  
            fi
        esac

        if [ -x $1/$file ] && [ "$file" != "clean" ]; then
            toDelete="y"
            if [ "$Inter" = "i" ]; then
                echo "Do you want to delete the file (enter y/n)?:  $1/$file"
                read toDelete
            fi
            if test $toDelete = "y"; then
                if [ "$Quiet" != "q" ]; then
                    echo "Deleted File: " $1/$file
                fi
                rm $1/$file
                NumFiles=$((NumFiles+1))  
            fi
        fi

    fi
done
}




##################### SET FLAGS #############################################
i=""
q=""
s=""
fileName="."

for var in "$@"
do
############### PARSE COMMAND LINE ARGUMENTS #########################
    if test $var = "-i" || test $var = "--interactive" ; then
        unset i
        i="i"  
    
    elif test $var = "-q" || test $var = "--quiet" ; then
        unset q
        q="q" 
    
    elif test $var = "-s" || test $var = "--stats"; then
        echo "Size Before: " && du -sh * | grep 2019
        unset s
        s="s"
    elif test $var != "0"; then   
        fileName=$var 

    fi

    # if test $1 = ""; then
    #     fileName=$1
    # fi

done
########### CALL THE RECURSIVE FUNCTION ##33###################
clean_files $fileName $i $q $s $NumFiles


#3############# IF STATS FLAG, THEN PRINT STATS ###################
if [ "$s" = "s" ]; then
    echo "Number of Files deleted: " $NumFiles
    echo "Size After: " && du -sh * | grep 2019
fi 